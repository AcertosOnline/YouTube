```yaml
name: Fetch Latest YouTube Video
on:
  schedule:
    - cron: '0 * * * *' # Roda a cada hora
  workflow_dispatch: # Permite execução manual

jobs:
  fetch-latest-video:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Garante permissões para push

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install feedparser requests

      - name: Fetch and process YouTube feed
        run: |
          python -c "
import feedparser
import requests
import sys
import os

# URL do feed do YouTube
feed_url = 'https://www.youtube.com/feeds/videos.xml?channel_id=UCWl8Ma619mTTXoo9P7mASdQ'

# Tenta acessar o feed com verificação de erro
try:
    response = requests.get(feed_url, timeout=10)
    response.raise_for_status()
    feed = feedparser.parse(response.content)
except Exception as e:
    print(f'Erro ao acessar o feed: {e}')
    sys.exit(1)

# Verificar se o feed contém entradas
if not feed.entries:
    print('Erro: Nenhum vídeo encontrado no feed.')
    sys.exit(1)

# Encontrar o vídeo mais recente que não é short
latest_video = None
for entry in feed.entries:
    link = entry.link
    print(f'Processando entrada: {link}')
    # Verifica se é um vídeo (não short) pelo link
    if 'youtu.be' not in link and 'watch' in link:
        latest_video = link
        print(f'Vídeo encontrado: {latest_video}')
        break

# Verificar se um vídeo válido foi encontrado
if not latest_video:
    print('Erro: Nenhum vídeo (não short) encontrado no feed.')
    sys.exit(1)

# Salvar apenas o link no arquivo .js
try:
    with open('latest_video.js', 'w') as f:
        f.write(f'\"{latest_video}\"')
    print('Link do vídeo salvo em latest_video.js')
except Exception as e:
    print(f'Erro ao salvar o arquivo: {e}')
    sys.exit(1)
"
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add latest_video.js
          git commit -m 'Update latest YouTube video link' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
